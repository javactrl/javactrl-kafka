plugins {
  id 'java-library'
  id 'maven-publish'
  id 'signing'
}

group = 'io.github.javactrl'
version = '1.0.1'
archivesBaseName = 'javactrl-kafka'

java {
  withJavadocJar()
  withSourcesJar()
}

compileJava {
  options.release = 11
}

repositories {
  mavenCentral()
}

configurations {
    javactrl
}

dependencies {
  implementation 'io.github.javactrl:javactrl-core:1.0.2'
  javactrl 'io.github.javactrl:javactrl-core:1.0.2'
  implementation 'org.apache.kafka:kafka-streams:3.3.1'
  implementation 'org.slf4j:slf4j-api:2.0.13'
  testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
  testImplementation 'org.apache.kafka:kafka-streams-test-utils:3.7.0'
  testImplementation 'com.fasterxml.jackson.core:jackson-core:2.17.0'
  testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.17.0'
  testImplementation 'org.slf4j:slf4j-simple:2.0.5' 
}

jar {
  manifest {
    attributes 'Automatic-Module-Name': 'io.github.javactrl.kafka'
  }
}

test {
  useJUnitPlatform()
  jvmArgs "-javaagent:${configurations.javactrl.iterator().next()}"
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      artifactId = 'javactrl-kafka'
      from components.java
      pom {
        name = 'javactrl-kafka'
        description = 'Workflow As Code on Kafka'
        url = 'https://github.com/javactrl/javactrl-kafka'
        licenses {
          license {
            name = 'The Apache License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }
        developers {
          developer {
            id = 'vitalii.akimov'
            name = 'Vitalii Akimov'
            email = 'vitaliy.akimov@gmail.com'
          }
        }
        scm {
          connection = 'scm:git:git://github.com/javactrl/javactrl.git'
          developerConnection = 'scm:git:ssh://github.com:javactrl/javactrl-kafka.git'
          url = 'http://github.com/javactrl/javactrl-kafka/tree/master'
        }
      }
    }
  }
  repositories {
    maven {
      name = "OSSRH"
      url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
      credentials {
        username = project.findProperty("ossrh.user") ?: System.getenv("OSSRH_USERNAME")
        password = project.findProperty("ossrh.password") ?: System.getenv("OSSRH_PASSWORD")
      }
    }
  }
}

signing {
  sign publishing.publications.mavenJava
}

javadoc {
  options.addBooleanOption('html5', true)
}
